/**
 * The RPG Engine API
 * Requires The RPG Engine to be running locally.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Vector3 from './Vector3';

/**
 * The TerrainDataPoint model module.
 * @module model/TerrainDataPoint
 * @version 1.0.0
 */
class TerrainDataPoint {
    /**
     * Constructs a new <code>TerrainDataPoint</code>.
     * @alias module:model/TerrainDataPoint
     */
    constructor() { 
        
        TerrainDataPoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TerrainDataPoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TerrainDataPoint} obj Optional instance to populate.
     * @return {module:model/TerrainDataPoint} The populated <code>TerrainDataPoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TerrainDataPoint();

            if (data.hasOwnProperty('position')) {
                obj['position'] = Vector3.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('colour')) {
                obj['colour'] = Vector3.constructFromObject(data['colour']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TerrainDataPoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TerrainDataPoint</code>.
     */
    static validateJSON(data) {
        // validate the optional field `position`
        if (data['position']) { // data not null
          Vector3.validateJSON(data['position']);
        }
        // validate the optional field `colour`
        if (data['colour']) { // data not null
          Vector3.validateJSON(data['colour']);
        }

        return true;
    }


}



/**
 * @member {module:model/Vector3} position
 */
TerrainDataPoint.prototype['position'] = undefined;

/**
 * Terrain data value
 * @member {Number} value
 */
TerrainDataPoint.prototype['value'] = undefined;

/**
 * @member {module:model/Vector3} colour
 */
TerrainDataPoint.prototype['colour'] = undefined;






export default TerrainDataPoint;

