/**
 * The RPG Engine API
 * Requires The RPG Engine to be running locally.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PropTransform from './PropTransform';

/**
 * The PropUserAnimation model module.
 * @module model/PropUserAnimation
 * @version 1.0.0
 */
class PropUserAnimation {
    /**
     * Constructs a new <code>PropUserAnimation</code>.
     * @alias module:model/PropUserAnimation
     */
    constructor() { 
        
        PropUserAnimation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PropUserAnimation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PropUserAnimation} obj Optional instance to populate.
     * @return {module:model/PropUserAnimation} The populated <code>PropUserAnimation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropUserAnimation();

            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = PropTransform.constructFromObject(data['start']);
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = PropTransform.constructFromObject(data['end']);
            }
            if (data.hasOwnProperty('toStart')) {
                obj['toStart'] = ApiClient.convertToType(data['toStart'], 'Boolean');
            }
            if (data.hasOwnProperty('pingPong')) {
                obj['pingPong'] = ApiClient.convertToType(data['pingPong'], 'Boolean');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('startDelay')) {
                obj['startDelay'] = ApiClient.convertToType(data['startDelay'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PropUserAnimation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PropUserAnimation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `start`
        if (data['start']) { // data not null
          PropTransform.validateJSON(data['start']);
        }
        // validate the optional field `end`
        if (data['end']) { // data not null
          PropTransform.validateJSON(data['end']);
        }

        return true;
    }


}



/**
 * The version of the user animation data
 * @member {Number} version
 */
PropUserAnimation.prototype['version'] = undefined;

/**
 * The name of the user animation
 * @member {String} name
 */
PropUserAnimation.prototype['name'] = undefined;

/**
 * @member {module:model/PropTransform} start
 */
PropUserAnimation.prototype['start'] = undefined;

/**
 * @member {module:model/PropTransform} end
 */
PropUserAnimation.prototype['end'] = undefined;

/**
 * Whether the animation goes to the start
 * @member {Boolean} toStart
 */
PropUserAnimation.prototype['toStart'] = undefined;

/**
 * Whether the animation is ping-pong
 * @member {Boolean} pingPong
 */
PropUserAnimation.prototype['pingPong'] = undefined;

/**
 * The duration of the animation
 * @member {Number} duration
 */
PropUserAnimation.prototype['duration'] = undefined;

/**
 * The start delay of the animation
 * @member {Number} startDelay
 */
PropUserAnimation.prototype['startDelay'] = undefined;






export default PropUserAnimation;

