/**
 * The RPG Engine API
 * Requires The RPG Engine to be running locally.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Color model module.
 * @module model/Color
 * @version 1.0.0
 */
class Color {
    /**
     * Constructs a new <code>Color</code>.
     * @alias module:model/Color
     */
    constructor() { 
        
        Color.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Color</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Color} obj Optional instance to populate.
     * @return {module:model/Color} The populated <code>Color</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Color();

            if (data.hasOwnProperty('r')) {
                obj['r'] = ApiClient.convertToType(data['r'], 'Number');
            }
            if (data.hasOwnProperty('g')) {
                obj['g'] = ApiClient.convertToType(data['g'], 'Number');
            }
            if (data.hasOwnProperty('b')) {
                obj['b'] = ApiClient.convertToType(data['b'], 'Number');
            }
            if (data.hasOwnProperty('a')) {
                obj['a'] = ApiClient.convertToType(data['a'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Color</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Color</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * red
 * @member {Number} r
 */
Color.prototype['r'] = undefined;

/**
 * green
 * @member {Number} g
 */
Color.prototype['g'] = undefined;

/**
 * blue
 * @member {Number} b
 */
Color.prototype['b'] = undefined;

/**
 * alpha
 * @member {Number} a
 */
Color.prototype['a'] = undefined;






export default Color;

