/*
 * The RPG Engine API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing PostProcessing
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PostProcessingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PostProcessing
        //private PostProcessing instance;

        public PostProcessingTests()
        {
            // TODO uncomment below to create an instance of PostProcessing
            //instance = new PostProcessing();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PostProcessing
        /// </summary>
        [Fact]
        public void PostProcessingInstanceTest()
        {
            // TODO uncomment below to test "IsType" PostProcessing
            //Assert.IsType<PostProcessing>(instance);
        }

        /// <summary>
        /// Test the property 'TiltShiftBlurAmount'
        /// </summary>
        [Fact]
        public void TiltShiftBlurAmountTest()
        {
            // TODO unit test for the property 'TiltShiftBlurAmount'
        }

        /// <summary>
        /// Test the property 'EdgeDetectionEnabled'
        /// </summary>
        [Fact]
        public void EdgeDetectionEnabledTest()
        {
            // TODO unit test for the property 'EdgeDetectionEnabled'
        }

        /// <summary>
        /// Test the property 'EdgeDetectionColor'
        /// </summary>
        [Fact]
        public void EdgeDetectionColorTest()
        {
            // TODO unit test for the property 'EdgeDetectionColor'
        }

        /// <summary>
        /// Test the property 'DitheringThreshold'
        /// </summary>
        [Fact]
        public void DitheringThresholdTest()
        {
            // TODO unit test for the property 'DitheringThreshold'
        }

        /// <summary>
        /// Test the property 'TubeDistortionStrength'
        /// </summary>
        [Fact]
        public void TubeDistortionStrengthTest()
        {
            // TODO unit test for the property 'TubeDistortionStrength'
        }

        /// <summary>
        /// Test the property 'PixelizationResolution'
        /// </summary>
        [Fact]
        public void PixelizationResolutionTest()
        {
            // TODO unit test for the property 'PixelizationResolution'
        }

        /// <summary>
        /// Test the property 'ColorSplitStrength'
        /// </summary>
        [Fact]
        public void ColorSplitStrengthTest()
        {
            // TODO unit test for the property 'ColorSplitStrength'
        }

        /// <summary>
        /// Test the property 'WaterRipplesStrength'
        /// </summary>
        [Fact]
        public void WaterRipplesStrengthTest()
        {
            // TODO unit test for the property 'WaterRipplesStrength'
        }

        /// <summary>
        /// Test the property 'WaterRipplesSpeed'
        /// </summary>
        [Fact]
        public void WaterRipplesSpeedTest()
        {
            // TODO unit test for the property 'WaterRipplesSpeed'
        }

        /// <summary>
        /// Test the property 'SketchEnabled'
        /// </summary>
        [Fact]
        public void SketchEnabledTest()
        {
            // TODO unit test for the property 'SketchEnabled'
        }

        /// <summary>
        /// Test the property 'RadialBlurAmount'
        /// </summary>
        [Fact]
        public void RadialBlurAmountTest()
        {
            // TODO unit test for the property 'RadialBlurAmount'
        }

        /// <summary>
        /// Test the property 'BloomThreshhold'
        /// </summary>
        [Fact]
        public void BloomThreshholdTest()
        {
            // TODO unit test for the property 'BloomThreshhold'
        }

        /// <summary>
        /// Test the property 'BloomIntensity'
        /// </summary>
        [Fact]
        public void BloomIntensityTest()
        {
            // TODO unit test for the property 'BloomIntensity'
        }

        /// <summary>
        /// Test the property 'VignetteIntensity'
        /// </summary>
        [Fact]
        public void VignetteIntensityTest()
        {
            // TODO unit test for the property 'VignetteIntensity'
        }

        /// <summary>
        /// Test the property 'VignetteColor'
        /// </summary>
        [Fact]
        public void VignetteColorTest()
        {
            // TODO unit test for the property 'VignetteColor'
        }

        /// <summary>
        /// Test the property 'PostExposure'
        /// </summary>
        [Fact]
        public void PostExposureTest()
        {
            // TODO unit test for the property 'PostExposure'
        }

        /// <summary>
        /// Test the property 'Saturation'
        /// </summary>
        [Fact]
        public void SaturationTest()
        {
            // TODO unit test for the property 'Saturation'
        }

        /// <summary>
        /// Test the property 'Hue'
        /// </summary>
        [Fact]
        public void HueTest()
        {
            // TODO unit test for the property 'Hue'
        }

        /// <summary>
        /// Test the property 'Temperature'
        /// </summary>
        [Fact]
        public void TemperatureTest()
        {
            // TODO unit test for the property 'Temperature'
        }

        /// <summary>
        /// Test the property 'SharpenEnabled'
        /// </summary>
        [Fact]
        public void SharpenEnabledTest()
        {
            // TODO unit test for the property 'SharpenEnabled'
        }

        /// <summary>
        /// Test the property 'BlackBars'
        /// </summary>
        [Fact]
        public void BlackBarsTest()
        {
            // TODO unit test for the property 'BlackBars'
        }

        /// <summary>
        /// Test the property 'ScanLinesEnabled'
        /// </summary>
        [Fact]
        public void ScanLinesEnabledTest()
        {
            // TODO unit test for the property 'ScanLinesEnabled'
        }

        /// <summary>
        /// Test the property 'ScanlinesAmount'
        /// </summary>
        [Fact]
        public void ScanlinesAmountTest()
        {
            // TODO unit test for the property 'ScanlinesAmount'
        }

        /// <summary>
        /// Test the property 'ScanlinesSpeed'
        /// </summary>
        [Fact]
        public void ScanlinesSpeedTest()
        {
            // TODO unit test for the property 'ScanlinesSpeed'
        }
    }
}
