/*
 * The RPG Engine API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing MapDataResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MapDataResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MapDataResponse
        //private MapDataResponse instance;

        public MapDataResponseTests()
        {
            // TODO uncomment below to create an instance of MapDataResponse
            //instance = new MapDataResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MapDataResponse
        /// </summary>
        [Fact]
        public void MapDataResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" MapDataResponse
            //Assert.IsType<MapDataResponse>(instance);
        }

        /// <summary>
        /// Test the property 'VarVersion'
        /// </summary>
        [Fact]
        public void VarVersionTest()
        {
            // TODO unit test for the property 'VarVersion'
        }

        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }

        /// <summary>
        /// Test the property 'TerrainData'
        /// </summary>
        [Fact]
        public void TerrainDataTest()
        {
            // TODO unit test for the property 'TerrainData'
        }

        /// <summary>
        /// Test the property 'LightRotation'
        /// </summary>
        [Fact]
        public void LightRotationTest()
        {
            // TODO unit test for the property 'LightRotation'
        }

        /// <summary>
        /// Test the property 'Atmosphere'
        /// </summary>
        [Fact]
        public void AtmosphereTest()
        {
            // TODO unit test for the property 'Atmosphere'
        }

        /// <summary>
        /// Test the property 'PostProcessing'
        /// </summary>
        [Fact]
        public void PostProcessingTest()
        {
            // TODO unit test for the property 'PostProcessing'
        }

        /// <summary>
        /// Test the property 'Settings'
        /// </summary>
        [Fact]
        public void SettingsTest()
        {
            // TODO unit test for the property 'Settings'
        }

        /// <summary>
        /// Test the property 'CutoutSettings'
        /// </summary>
        [Fact]
        public void CutoutSettingsTest()
        {
            // TODO unit test for the property 'CutoutSettings'
        }

        /// <summary>
        /// Test the property 'Ppu'
        /// </summary>
        [Fact]
        public void PpuTest()
        {
            // TODO unit test for the property 'Ppu'
        }

        /// <summary>
        /// Test the property 'Props'
        /// </summary>
        [Fact]
        public void PropsTest()
        {
            // TODO unit test for the property 'Props'
        }

        /// <summary>
        /// Test the property 'EPoints'
        /// </summary>
        [Fact]
        public void EPointsTest()
        {
            // TODO unit test for the property 'EPoints'
        }

        /// <summary>
        /// Test the property 'ControlledProps'
        /// </summary>
        [Fact]
        public void ControlledPropsTest()
        {
            // TODO unit test for the property 'ControlledProps'
        }

        /// <summary>
        /// Test the property 'ControlledStates'
        /// </summary>
        [Fact]
        public void ControlledStatesTest()
        {
            // TODO unit test for the property 'ControlledStates'
        }

        /// <summary>
        /// Test the property 'TurnOrderGuids'
        /// </summary>
        [Fact]
        public void TurnOrderGuidsTest()
        {
            // TODO unit test for the property 'TurnOrderGuids'
        }

        /// <summary>
        /// Test the property 'CameraViews'
        /// </summary>
        [Fact]
        public void CameraViewsTest()
        {
            // TODO unit test for the property 'CameraViews'
        }

        /// <summary>
        /// Test the property 'StartingCamera'
        /// </summary>
        [Fact]
        public void StartingCameraTest()
        {
            // TODO unit test for the property 'StartingCamera'
        }
    }
}
