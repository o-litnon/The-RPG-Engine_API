/*
 * The RPG Engine API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing CurrentCampaignCurrentMapApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CurrentCampaignCurrentMapApiTests : IDisposable
    {
        private CurrentCampaignCurrentMapApi instance;

        public CurrentCampaignCurrentMapApiTests()
        {
            instance = new CurrentCampaignCurrentMapApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CurrentCampaignCurrentMapApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CurrentCampaignCurrentMapApi
            //Assert.IsType<CurrentCampaignCurrentMapApi>(instance);
        }

        /// <summary>
        /// Test CurrentCampaignCurrentMapGet
        /// </summary>
        [Fact]
        public void CurrentCampaignCurrentMapGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CurrentCampaignCurrentMapGet();
            //Assert.IsType<MapDataResponse>(response);
        }

        /// <summary>
        /// Test CurrentCampaignCurrentMapPickupablesGet
        /// </summary>
        [Fact]
        public void CurrentCampaignCurrentMapPickupablesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CurrentCampaignCurrentMapPickupablesGet();
            //Assert.IsType<PagedResponseOfProp>(response);
        }

        /// <summary>
        /// Test CurrentCampaignCurrentMapPickupablesPost
        /// </summary>
        [Fact]
        public void CurrentCampaignCurrentMapPickupablesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<Prop> prop = null;
            //var response = instance.CurrentCampaignCurrentMapPickupablesPost(prop);
            //Assert.IsType<List<Prop>>(response);
        }

        /// <summary>
        /// Test CurrentCampaignCurrentMapSendAllPlayersPost
        /// </summary>
        [Fact]
        public void CurrentCampaignCurrentMapSendAllPlayersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mapName = null;
            //instance.CurrentCampaignCurrentMapSendAllPlayersPost(mapName);
        }

        /// <summary>
        /// Test CurrentCampaignCurrentMapTerrainDataGet
        /// </summary>
        [Fact]
        public void CurrentCampaignCurrentMapTerrainDataGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CurrentCampaignCurrentMapTerrainDataGet();
            //Assert.IsType<PagedResponseOfTerrainDataPoint>(response);
        }
    }
}
