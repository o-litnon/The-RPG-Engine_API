/*
 * The RPG Engine API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing PickupablesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PickupablesApiTests : IDisposable
    {
        private PickupablesApi instance;

        public PickupablesApiTests()
        {
            instance = new PickupablesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PickupablesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PickupablesApi
            //Assert.IsType<PickupablesApi>(instance);
        }

        /// <summary>
        /// Test PickupablesGet
        /// </summary>
        [Fact]
        public void PickupablesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PickupablesGet();
            //Assert.IsType<PagedResponseOfProp>(response);
        }

        /// <summary>
        /// Test PickupablesGuidAnimationsGet
        /// </summary>
        [Fact]
        public void PickupablesGuidAnimationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string guid = null;
            //var response = instance.PickupablesGuidAnimationsGet(guid);
            //Assert.IsType<List<PagedResponseOfAnimations>>(response);
        }

        /// <summary>
        /// Test PickupablesGuidAnimationsPut
        /// </summary>
        [Fact]
        public void PickupablesGuidAnimationsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string guid = null;
            //Animation animation = null;
            //instance.PickupablesGuidAnimationsPut(guid, animation);
        }

        /// <summary>
        /// Test PickupablesGuidChatPost
        /// </summary>
        [Fact]
        public void PickupablesGuidChatPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string guid = null;
            //string body = null;
            //instance.PickupablesGuidChatPost(guid, body);
        }

        /// <summary>
        /// Test PickupablesGuidDelete
        /// </summary>
        [Fact]
        public void PickupablesGuidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string guid = null;
            //instance.PickupablesGuidDelete(guid);
        }

        /// <summary>
        /// Test PickupablesGuidGet
        /// </summary>
        [Fact]
        public void PickupablesGuidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string guid = null;
            //var response = instance.PickupablesGuidGet(guid);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test PickupablesGuidTransformGet
        /// </summary>
        [Fact]
        public void PickupablesGuidTransformGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string guid = null;
            //var response = instance.PickupablesGuidTransformGet(guid);
            //Assert.IsType<PropTransform>(response);
        }

        /// <summary>
        /// Test PickupablesGuidTransformPut
        /// </summary>
        [Fact]
        public void PickupablesGuidTransformPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string guid = null;
            //PropTransform propTransform = null;
            //instance.PickupablesGuidTransformPut(guid, propTransform);
        }
    }
}
