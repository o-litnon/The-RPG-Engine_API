/*
 * The RPG Engine API
 * Requires The RPG Engine to be running locally.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.Color;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PostProcessing
 */
public class PostProcessingTest {
    private final PostProcessing model = new PostProcessing();

    /**
     * Model tests for PostProcessing
     */
    @Test
    public void testPostProcessing() {
        // TODO: test PostProcessing
    }

    /**
     * Test the property 'tiltShiftBlurAmount'
     */
    @Test
    public void tiltShiftBlurAmountTest() {
        // TODO: test tiltShiftBlurAmount
    }

    /**
     * Test the property 'edgeDetectionEnabled'
     */
    @Test
    public void edgeDetectionEnabledTest() {
        // TODO: test edgeDetectionEnabled
    }

    /**
     * Test the property 'edgeDetectionColor'
     */
    @Test
    public void edgeDetectionColorTest() {
        // TODO: test edgeDetectionColor
    }

    /**
     * Test the property 'ditheringThreshold'
     */
    @Test
    public void ditheringThresholdTest() {
        // TODO: test ditheringThreshold
    }

    /**
     * Test the property 'tubeDistortionStrength'
     */
    @Test
    public void tubeDistortionStrengthTest() {
        // TODO: test tubeDistortionStrength
    }

    /**
     * Test the property 'pixelizationResolution'
     */
    @Test
    public void pixelizationResolutionTest() {
        // TODO: test pixelizationResolution
    }

    /**
     * Test the property 'colorSplitStrength'
     */
    @Test
    public void colorSplitStrengthTest() {
        // TODO: test colorSplitStrength
    }

    /**
     * Test the property 'waterRipplesStrength'
     */
    @Test
    public void waterRipplesStrengthTest() {
        // TODO: test waterRipplesStrength
    }

    /**
     * Test the property 'waterRipplesSpeed'
     */
    @Test
    public void waterRipplesSpeedTest() {
        // TODO: test waterRipplesSpeed
    }

    /**
     * Test the property 'sketchEnabled'
     */
    @Test
    public void sketchEnabledTest() {
        // TODO: test sketchEnabled
    }

    /**
     * Test the property 'radialBlurAmount'
     */
    @Test
    public void radialBlurAmountTest() {
        // TODO: test radialBlurAmount
    }

    /**
     * Test the property 'bloomThreshhold'
     */
    @Test
    public void bloomThreshholdTest() {
        // TODO: test bloomThreshhold
    }

    /**
     * Test the property 'bloomIntensity'
     */
    @Test
    public void bloomIntensityTest() {
        // TODO: test bloomIntensity
    }

    /**
     * Test the property 'vignetteIntensity'
     */
    @Test
    public void vignetteIntensityTest() {
        // TODO: test vignetteIntensity
    }

    /**
     * Test the property 'vignetteColor'
     */
    @Test
    public void vignetteColorTest() {
        // TODO: test vignetteColor
    }

    /**
     * Test the property 'postExposure'
     */
    @Test
    public void postExposureTest() {
        // TODO: test postExposure
    }

    /**
     * Test the property 'saturation'
     */
    @Test
    public void saturationTest() {
        // TODO: test saturation
    }

    /**
     * Test the property 'hue'
     */
    @Test
    public void hueTest() {
        // TODO: test hue
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    public void temperatureTest() {
        // TODO: test temperature
    }

    /**
     * Test the property 'sharpenEnabled'
     */
    @Test
    public void sharpenEnabledTest() {
        // TODO: test sharpenEnabled
    }

    /**
     * Test the property 'blackBars'
     */
    @Test
    public void blackBarsTest() {
        // TODO: test blackBars
    }

    /**
     * Test the property 'scanLinesEnabled'
     */
    @Test
    public void scanLinesEnabledTest() {
        // TODO: test scanLinesEnabled
    }

    /**
     * Test the property 'scanlinesAmount'
     */
    @Test
    public void scanlinesAmountTest() {
        // TODO: test scanlinesAmount
    }

    /**
     * Test the property 'scanlinesSpeed'
     */
    @Test
    public void scanlinesSpeedTest() {
        // TODO: test scanlinesSpeed
    }

}
